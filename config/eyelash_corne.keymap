#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#include <input/processors.dtsi>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        tap-ms = <30>;
    };

    /*
    * https://github.com/zmkfirmware/zmk/blob/main/app/include/dt-bindings/zmk/keys.h

    A-Z         Letter keys (A through Z)
    N0-N9       Number keys (0 through 9)

    BSPC        Backspace
    C_PLAY      Media Play/Pause
    C_VOL_DN    Volume Down
    C_VOL_UP    Volume Up
    DEL         Delete
    ENTER       Enter/Return key
    ESC         Escape key
    LALT        Left Alt modifier
    LCTRL       Left Control modifier
    LGUI        Left GUI (Windows/Command) modifier
    LSHIFT      Left Shift modifier
    SEMI        Semicolon
    SPACE       Spacebar
    SQT         Single quote
    TAB         Tab key
    DOT         Period
    COMMA       Command
    FSLH        Forward slash

    &caps_word  Caps word
    &ht         Mod-tap
    &kp         Key press behavior
    &lt         Layer tap
    &macro      macro
    &mo         Momentary layer switch
    &mod_morph  Mod-morph
    &mt         Mod-tap
    &none       No operation
    &sk         Sticky key
    &td         Tap Dance
    &to         To layer (switch to layer)
    &tog        Toggle layer
    &trans      Transparent key (pass through to lower layer)

    &mmv        Mouse move
    &mkp        Mouse button press

    &rgb_ug     RGB underglow
                RGB_ON: Turns RGB on
                RGB_OFF: Turns RGB off
                RGB_TOG: Toggles RGB on/off
                RGB_HUI/RGB_HUD: Increases/decreases hue
                RGB_SAI/RGB_SAD: Increases/decreases saturation
                RGB_BRI/RGB_BRD: Increases/decreases brightness
                RGB_SPI/RGB_SPD: Increases/decreases animation speed
                RGB_EFF/RGB_EFR: Cycles effects forward/reverse
                RGB_COLOR_HSB: Sets specific HSB color
    */

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "qwerty";
            bindings = <
&kp TAB    &kp Q       &kp W       &kp E        &kp R        &kp T                         &kp UP                &kp Y        &kp U       &kp I       &kp O      &kp P         &kp BSPC
&kp LCTRL  &mt LGUI A  &mt LALT S  &mt LCTRL D  &mt LSHFT F  &kp G               &kp LEFT  &kp ENTER  &kp RIGHT  &kp H        &mt LSHFT J &mt LCTRL K &mt LALT L &mt LGUI SEMI &kp SQT
&td0       &kp Z       &kp X       &kp C        &kp V        &kp B  &kp C_MUTE             &kp DOWN              &kp N        &kp M       &kp COMMA   &kp DOT    &kp FSLH      &kp ESC
                                   &lt 5 ESC    &lt 2 SPACE  &lt 4 ENTER                                         &lt 4 ENTER  &lt 1 SPACE &lt 3 DEL
            >;
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_1_number {
            display-name = "number";
            bindings = <
&trans  &kp LBKT   &kp N7   &kp N8   &kp N9   &kp BK                                     &mmv MOVE_UP                    &none   &none   &none   &none   &none   &none
&trans  &kp SEMI   &kp N4   &kp N5   &kp N6   &kp EQUAL                  &mmv MOVE_LEFT  &mkp LCLK      &mmv MOVE_RIGHT  &none   &none   &none   &none   &none   &none
&trans  &kp GRAVE  &kp N1   &kp N2   &kp N3   &kp BSLH   &trans                          &mmv MOVE_DOWN                  &none   &none   &none   &none   &none   &none
                            &kp DOT  &kp N0   &kp MIN                                                                    &none   &none   &none
            >;
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2_nav {
            display-name = "nav";
            bindings = <
&none   &none   &none   &none   &none   &none                                &mmv MOVE_UP                    &kp K_AGAIN  &kp K_PASTE  &kp K_COPY  &kp K_CUT   &kp K_UNDO   &none
&none   &none   &none   &none   &none   &none                &mmv MOVE_LEFT  &mkp LCLK      &mmv MOVE_RIGHT  &kp LEFT     &kp DOWN     &kp UP      &kp RIGHT   &kp HOME     &kp END
&none   &none   &none   &none   &none   &none  &trans                        &mmv MOVE_DOWN                  &kp INS      &kp PG_DN    &kp PG_UP   &none       &none        &none
                        &none   &none   &none                                                                &kp ENTER    &kp BSPC     &kp DEL
            >;
            sensor-bindings = <&scroll_encoder>;
        };

        layer_3_function {
            display-name = "function";
            bindings = <
&kp F13   &kp F12   &kp F7   &kp F8   &kp F9   &kp PSCRN                                  &mmv MOVE_UP                    &none   &none   &none   &none   &none   &none
&kp F14   &kp F11   &kp F4   &kp F5   &kp F6   &kp SCLK                   &mmv MOVE_LEFT  &mkp LCLK      &mmv MOVE_RIGHT  &none   &none   &none   &none   &none   &none
&kp F15   &kp F10   &kp F1   &kp F2   &kp F3   &kp PAUSE_BREAK  &trans                    &mmv MOVE_DOWN                  &none   &none   &none   &none   &none   &none
                            &kp K_APP &kp SPC  &kp ENTER                                                                  &none   &none   &none
            >;
            sensor-bindings = <&scroll_encoder>;
        };

        layer_4_symbol {
            display-name = "symbol";
            bindings = <
&none  &kp LBRC   &kp AMPS   &kp ASTRK  &kp LPAR   &kp RBRC                           &mmv MOVE_UP                      &none   &none   &none   &none   &none   &none
&none  &kp COLON  &kp DLLR   &kp PRCNT  &kp CARET  &kp PLUS           &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT   &none   &none   &none   &none   &none   &none
&none  &kp TILDE  &kp EXCL   &kp AT     &kp HASH   &kp PIPE  &trans                   &mmv MOVE_DOWN                    &none   &none   &none   &none   &none   &none
                             &kp LPAR   &kp RPAR   &kp UNDER                                                            &none   &none   &none
            >;
            sensor-bindings = <&scroll_encoder>;
        };

        layer_5_media {
            display-name = "media";
            bindings = <
&bt BT_CLR_ALL  &bt BT_SEL 0   &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &none                                          &mmv MOVE_UP                    &kp K_AGAIN  &kp K_PASTE  &kp K_COPY  &kp K_CUT   &kp K_UNDO   &none
&rgb_ug RGB_OFF &rgb_ub RGB_ON &rgb_ug RGB_EFR &rgb_ug RGB_EFF &rgb_ug RGB_SPD &rgb_ug RGB_SPI                &mmv MOVE_LEFT  &mkp LCLK      &mmv MOVE_RIGHT  &kp LEFT     &kp DOWN     &kp UP      &kp RIGHT   &kp HOME     &kp END
&none           &none          &none           &none           &rgb_ug RGB_BRD &rgb_ug RGB_BRI  &trans                        &mmv MOVE_DOWN                  &kp INS      &kp PG_DN    &kp PG_UP   &none       &none        &none
                        &none   &none   &none                                                                                                                 &kp ENTER    &kp BSPC     &kp DEL
            >;
            sensor-bindings = <&scroll_encoder>;
        };


//        layer_1_number {
//            display-name = "number";
//            bindings = <
//&trans  &kp N1           &kp N2          &kp N3        &kp N4        &kp N5                                        &mmv MOVE_UP                    &kp N6           &kp N7           &kp N8           &kp N9           &kp N0    &kp BSPC
//&trans  &bt BT_CLR_ALL   &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3                  &mmv MOVE_LEFT  &mkp LCLK      &mmv MOVE_RIGHT  &kp LEFT         &kp DOWN         &kp UP           &kp RIGHT        &kp HOME  &kp PG_UP
//&trans  &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &trans        &trans        &rgb_ug RGB_EFF &kp C_MUTE                    &mmv MOVE_DOWN                  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp END   &kp PG_DN
//                                         &trans        &trans        &trans                                                                        &kp INS          &kp DEL          &trans
//            >;
//            sensor-bindings = <&scroll_encoder>;
//        };
//
//        layer_2_symbol {
//            display-name = "symbol";
//            bindings = <
//&trans  &kp EXCL      &kp AT        &kp HASH   &kp DLLR   &kp PRCNT                           &mmv MOVE_UP                     &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
//&trans  &bt BT_CLR    &mkp LCLK     &mkp MCLK  &mkp RCLK  &mkp MB4            &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
//&trans  &out OUT_USB  &out OUT_BLE  &none      &none      &mkp MB5  &trans                    &mmv MOVE_DOWN                   &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
//                                    &trans     &trans     &kp SPACE                                                            &kp RET    &trans     &trans
//            >;
//            sensor-bindings = <&scroll_encoder>;
//        };
//
//        layer_3_function {
//            display-name = "function";
//            bindings = <
//&studio_unlock   &kp F1      &kp F2      &kp F3       &kp F4     &kp F5                                  &mmv MOVE_UP                     &kp F6       &kp F7     &kp F8       &kp F9      &kp F10          &kp F11
//&trans  &trans      &mkp LCLK   &mkp MCLK    &mkp RCLK  &mkp MB4                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &bootloader  &mkp LCLK  &mkp MCLK    &mkp RCLK   &kp PRINTSCREEN  &kp F12
//&trans  &sys_reset  &trans      &bootloader  &trans     &mkp MB5  &kp C_MUTE                    &mmv MOVE_DOWN                   &trans       &trans     &bootloader  &sys_reset  &kp SCROLLLOCK   &kp PAUSE_BREAK
//                                &trans      &trans      &trans                                                                   &trans       &trans     &trans
//            >;
//            sensor-bindings = <&scroll_encoder>;
//        };
    };
};
